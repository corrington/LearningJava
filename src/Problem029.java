/*
ProjectEuler.net
Problem 29 - Distinct powers
Consider all integer combinations of a^b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

2^2=4, 2^3=8, 2^4=16, 2^5=32
3^2=9, 3^3=27, 3^4=81, 3^5=243
4^2=16, 4^3=64, 4^4=256, 4^5=1024
5^2=25, 5^3=125, 5^4=625, 5^5=3125

If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

 */
import java.lang.Math;
import java.util.HashSet;

public class Problem029 {

    public static int distinctPowers(final int maxA, final int maxB) {
        // use a hash set to collect our distinct terms
        var set = new HashSet<Double>();

        for (int a = 2; a <= maxA; a++) {

            for (int b = 2; b <= maxB; b++) {
                double term = Math.pow(a, b);
                set.add(term);
                // System.out.println("" + a + "^" + b + " = " + term); // DEBUG
            }  // for b
        } // for a
        return set.size();
    } // distinctPowers()

    public static void main(String[] args) {
        int distinctTerms = distinctPowers(5, 5);
        System.out.println("answer is " + distinctTerms + " distinct terms");

        distinctTerms = distinctPowers(100, 100);
        System.out.println("answer is " + distinctTerms + " distinct terms");

    } // mai()
}  // class Problem029
