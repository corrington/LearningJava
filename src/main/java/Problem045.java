/*
ProjectEuler.net
Problem 45 - Triangular, pentagonal, and hexagonal
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
 */

public class Problem045 {

    private static long nextTriangle(final int n) {
        return (n * (n + 1L)) / 2L;
    } // nextTriangle()

    private static long nextPentagonal(final int n) {
        return (n * (3L * n - 1L)) / 2L;
    } // nextPentagonal()

    private static long nextHexagonal(final int n) {
        return n * (2L * n - 1L);
    } // nextHexagonal()

    public static void main(String[] args) {

        int triangleIndex = 286;
        long triangleValue = nextTriangle(triangleIndex);

        int pentagonalIndex = 165;
        long pentagonalValue = nextPentagonal(pentagonalIndex);

        int hexagonalIndex = 143;
        long hexagonalValue = nextHexagonal(hexagonalIndex);

        // loop around and around, bumping up the smallest value, until all three values are equal
        while ((triangleValue != pentagonalValue) || (triangleValue != hexagonalValue)) {

            // if the current triangle value is smaller than the other two, get the next triangle value
            if ((triangleValue <= pentagonalValue) && (triangleValue <= hexagonalValue)) {
                triangleIndex++;
                triangleValue = nextTriangle(triangleIndex);

            // if the current pentagonal value is smaller than the other two, get the next pentagonal value
            } else if ((pentagonalValue <= triangleValue) && (pentagonalValue <= hexagonalValue)) {
                pentagonalIndex++;
                pentagonalValue = nextPentagonal(pentagonalIndex);

            // Well, the current hexagonal value must be smaller than the other two.  Get the next hexagonal value.
            } else {
                hexagonalIndex++;
                hexagonalValue = nextHexagonal(hexagonalIndex);
            } // if

        } // while

        System.out.println("answer is " + triangleValue);

    } // main()

} //  class Problem045
